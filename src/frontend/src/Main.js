// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Agent from "./Agent.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Candid from "./Candid.js";
import * as Backend from "dfx-generated/backend";

var actor = Agent.createActor(Backend.idlFactory, Backend.canisterId);

var service = Candid.Service.fromActor(actor);

function printTree(t) {
  if (t.TAG === /* Leaf */0) {
    return String(t._0);
  } else {
    return "(" + printTree(t._0) + ", " + printTree(t._1) + ")";
  }
}

function Main$main(Props) {
  var match = React.useState(function () {
        return "hello";
      });
  var updateState = match[1];
  var state = match[0];
  var onNewTree = function (newTree) {
    var newState = printTree(newTree);
    if (newState !== state) {
      return Curry._1(updateState, (function (param) {
                    return newState;
                  }));
    }
    
  };
  var onTick = function (param) {
    Curry._1(service.get, undefined).then(onNewTree);
    
  };
  var onClickReverse = function (param) {
    Curry._1(service.reverseInPlace, undefined);
    
  };
  var onClickExtend = function (param) {
    Curry._1(service.extend, undefined);
    
  };
  React.useEffect((function () {
          var intervalId = setInterval(onTick, 1000);
          return (function (param) {
                    clearInterval(intervalId);
                    
                  });
        }), []);
  return React.createElement("div", undefined, React.createElement("section", undefined, "State: " + state), React.createElement("section", undefined, React.createElement("button", {
                      id: "clickMeBtn",
                      onClick: onClickReverse
                    }, "Reverse"), React.createElement("button", {
                      id: "clickMeBtn",
                      onClick: onClickExtend
                    }, "Extend")));
}

var main = Main$main;

export {
  actor ,
  service ,
  printTree ,
  main ,
  
}
/* actor Not a pure module */
