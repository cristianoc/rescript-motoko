// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Keys from "./Keys.js";
import * as Config from "./Config.js";
import * as CamlinternalLazy from "rescript/lib/es6/camlinternalLazy.js";

var lazyCanvasData = {
  LAZY_DONE: false,
  VAL: (function () {
      var el = document.getElementById(Config.canvasId);
      if (el !== null) {
        var width = el.width;
        var height = el.height;
        var context = el.getContext("2d");
        context.scale(Config.scale, Config.scale);
        document.addEventListener("keydown", Keys.keydown, true);
        document.addEventListener("keyup", Keys.keyup, true);
        return {
                sizeScaled: {
                  widthScaled: width / Config.scale,
                  heightScaled: height / Config.scale
                },
                context: context
              };
      }
      console.log("cant find canvas " + (Config.canvasId + " \n"));
      throw {
            RE_EXN_ID: "Assert_failure",
            _1: [
              "Load.res",
              12,
              4
            ],
            Error: new Error()
          };
    })
};

function getCanvasData(param) {
  return CamlinternalLazy.force(lazyCanvasData);
}

function getContext(param) {
  return CamlinternalLazy.force(lazyCanvasData).context;
}

function getSizeScaled(param) {
  return CamlinternalLazy.force(lazyCanvasData).sizeScaled;
}

export {
  lazyCanvasData ,
  getCanvasData ,
  getContext ,
  getSizeScaled ,
  
}
/* No side effect */
