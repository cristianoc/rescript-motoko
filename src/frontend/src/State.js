// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Candid from "./Candid.js";
import * as Sprite from "./Sprite.js";
import * as Backend from "./Backend.js";
import * as Viewport from "./Viewport.js";
import * as Generator from "./Generator.js";

function $$new(level, score) {
  var player1 = Generator.newPlayer(/* One */0)(level);
  var player2 = Generator.newPlayer(/* Two */1)(level);
  var viewport = Viewport.make(level);
  Viewport.update(viewport, player1.px, player1.py);
  var objects = Generator.generate(level);
  return {
          bgd: Sprite.makeBgd(undefined),
          coins: 0,
          level: level,
          multiplier: 1,
          objects: objects,
          particles: /* [] */0,
          player1: player1,
          player2: player2,
          score: score,
          status: /* Playing */2,
          viewport: viewport
        };
}

function updateScore(state, i) {
  state.score = state.score + i | 0;
  
}

var current = {
  contents: $$new(1, 0)
};

function load(param) {
  return Backend.actor.loadGameState(Candid.Principal.dummy).then(function (json) {
              if (json !== "") {
                current.contents = JSON.parse(json);
              }
              return Promise.resolve(undefined);
            });
}

function save(param) {
  return Backend.actor.saveGameState(Candid.Principal.dummy, JSON.stringify(current.contents));
}

export {
  $$new ,
  updateScore ,
  current ,
  load ,
  save ,
  
}
/* current Not a pure module */
